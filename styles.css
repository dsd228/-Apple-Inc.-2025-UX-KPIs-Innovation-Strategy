const darkModeBtn = document.getElementById('darkmode-btn');
const hamburger = document.querySelector('.hamburger');
const sidebar = document.querySelector('.sidebar');

darkModeBtn.addEventListener('click', () => {
  document.body.classList.toggle('dark-mode');
  darkModeBtn.textContent = document.body.classList.contains('dark-mode') ? 'Modo Claro' : 'Modo Oscuro';
});

hamburger.addEventListener('click', () => {
  sidebar.classList.toggle('open');
  hamburger.setAttribute('aria-expanded', sidebar.classList.contains('open'));
});

// Variables globales para charts
let insightChart1, insightChart2, insightChart3, financialChart;

// Función para inicializar gráficos vacíos o con datos dummy
function initCharts() {
  const ctx1 = document.getElementById('insightChart1').getContext('2d');
  insightChart1 = new Chart(ctx1, { type: 'bar', data: {}, options: {} });

  const ctx2 = document.getElementById('insightChart2').getContext('2d');
  insightChart2 = new Chart(ctx2, { type: 'line', data: {}, options: {} });

  const ctx3 = document.getElementById('insightChart3').getContext('2d');
  insightChart3 = new Chart(ctx3, { type: 'radar', data: {}, options: {} });

  const ctx4 = document.getElementById('financialChart').getContext('2d');
  financialChart = new Chart(ctx4, { type: 'bar', data: {}, options: {} });
}

// Función para actualizar los gráficos con datos
function updateCharts(data) {
  // Usuarios Nuevos
  insightChart1.data = {
    labels: data.usuariosNuevos.labels,
    datasets: [{
      label: 'Usuarios Nuevos (millones)',
      data: data.usuariosNuevos.data,
      backgroundColor: '#007aff',
      borderRadius: 5,
    }]
  };
  insightChart1.options = {
    responsive: true,
    plugins: { legend: { display: false } },
    scales: { y: { beginAtZero: true } }
  };
  insightChart1.update();

  // Ventas Trimestrales
  insightChart2.data = {
    labels: data.ventasTrimestrales.labels,
    datasets: [{
      label: 'Ingresos (billones USD)',
      data: data.ventasTrimestrales.data,
      borderColor: '#34c759',
      fill: false,
      tension: 0.3,
      pointRadius: 5,
      pointHoverRadius: 7,
    }]
  };
  insightChart2.options = {
    responsive: true,
    plugins: { legend: { display: true } },
    scales: { y: { beginAtZero: true } }
  };
  insightChart2.update();

  // Satisfacción Cliente
  insightChart3.data = {
    labels: data.satisfaccionCliente.labels,
    datasets: [{
      label: 'Satisfacción',
      data: data.satisfaccionCliente.data,
      backgroundColor: 'rgba(255, 204, 0, 0.5)',
      borderColor: '#ffcc00',
      borderWidth: 2,
      pointBackgroundColor: '#ffcc00',
    }]
  };
  insightChart3.options = {
    responsive: true,
    scales: {
      r: {
        beginAtZero: true,
        max: 100,
        ticks: { stepSize: 20 }
      }
    },
    plugins: { legend: { position: 'top' } }
  };
  insightChart3.update();

  // Finanzas
  financialChart.data = {
    labels: data.finanzas.labels,
    datasets: [
      {
        label: 'Ingresos (billones USD)',
        data: data.finanzas.ingresos,
        backgroundColor: '#007aff',
        borderRadius: 5,
      },
      {
        label: 'Beneficio Neto (billones USD)',
        data: data.finanzas.beneficios,
        backgroundColor: '#34c759',
        borderRadius: 5,
      }
    ]
  };
  financialChart.options = {
    responsive: true,
    plugins: { legend: { position: 'top' } },
    scales: { y: { beginAtZero: true } }
  };
  financialChart.update();

  // Actualizar contacto
  document.querySelector('.contact-list li:nth-child(1)').textContent = `Correo: ${data.contacto.email}`;
  document.querySelector('.contact-list li:nth-child(2)').textContent = `Teléfono: ${data.contacto.telefono}`;
  document.querySelector('.contact-list li:nth-child(3)').textContent = `Dirección: ${data.contacto.direccion}`;
}

// Función principal de carga
async function loadDataAndRender() {
  try {
    const response = await fetch('./data.json');
    if (!response.ok) throw new Error('No se pudo cargar data.json');
    const data = await response.json();
    updateCharts(data);
  } catch (error) {
    console.error('Error cargando datos:', error);
  }
}

window.onload = () => {
  initCharts();
  loadDataAndRender();
};
